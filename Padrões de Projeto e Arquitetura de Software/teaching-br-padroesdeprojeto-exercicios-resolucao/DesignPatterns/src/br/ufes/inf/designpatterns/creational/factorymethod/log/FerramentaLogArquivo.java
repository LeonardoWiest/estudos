package br.ufes.inf.designpatterns.creational.factorymethod.log;import java.io.File;import java.io.FileWriter;import java.io.IOException;import java.util.Date;import br.ufes.inf.designpatterns.util.ResourceUtils;/** * Ferramenta de log que envia as mensagens para um arquivo. *  * @author Vitor E. Silva Souza (vitorsouza@gmail.com) * @version 2005.07.03 */public class FerramentaLogArquivo extends FerramentaLog {	/** Arquivo de log. */	private File arquivoLog;	/** Construtor. */	public FerramentaLogArquivo() {		// Localiza o arquivo de log.		String pacote = getClass().getPackage().getName().toString().replace('.', '/');		File dir = ResourceUtils.getResourceAsFile(pacote + "/");		arquivoLog = new File(dir, "log.txt");		// Cria se não existir.		try {			if (!arquivoLog.exists())				arquivoLog.createNewFile();		}		catch (IOException e) {			System.out.println("Não foi possível criar o arquivo de log:\n" + e);			System.exit(1);		}	}	/** @see br.ufes.inf.designpatterns.creational.factorymethod.log.FerramentaLog#registrarLog(java.lang.String) */	public void registrarLog(String mensagem) {		try {			// Imprime no arquivo.			FileWriter writer = new FileWriter(arquivoLog, true);			writer.write(dateFormat.format(new Date(System.currentTimeMillis())) + mensagem + "\n");			writer.close();		}		catch (IOException e) {			System.out.println("Não foi possível escrever no arquivo de log:\n" + e);			System.exit(1);		}	}}